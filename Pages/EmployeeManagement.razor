@page "/EmployeeManagement"
@using ManagementApp.Entities;
@using ManagementApp.Models;
@using ManagementApp.Services.Contracts;
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Grids;

@inject IEmployeeManagementService EmployeeManagementService;

<h3>Employee Management</h3>

<div style="max-width:900px">
    <SfGrid DataSource="employeeData">
        <!--<GridPageSettings PageSize="10"></GridPageSettings>-->
        <!--<GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>-->
        <!--<GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true"></GridEditSettings>-->
        <GridEditSettings AllowEditing="true"></GridEditSettings>
        <GridColumns>
            <GridColumn IsPrimaryKey="true" Field="@nameof(EmployeeModel.Id)" Width="50px"></GridColumn>
            <GridColumn HeaderText="First name" Field="@nameof(EmployeeModel.FirstName)"></GridColumn>
            <GridColumn HeaderText="Last name" Field="@nameof(EmployeeModel.LastName)"></GridColumn>
            <!--<GridColumn HeaderText="Job Title" Field="@nameof(EmployeeModel.EmployeeJobTitleId)" Width="100px"></GridColumn>-->
            <GridForeignColumn HeaderText="Desigantion" TValue="EmployeeJobTitle" Field="@nameof(EmployeeModel.EmployeeJobTitleId)" ForeignDataSource="employeeJobTitleData" ForeignKeyValue="Name" Width="100px">
                <EditTemplate>
                    <SfDropDownList @bind-value="@((context as EmployeeModel).EmployeeJobTitleId)" ID="EmployeeJobTitleId" DataSource="employeeJobTitleData" TItem="EmployeeJobTitle" TValue="int">
                        <DropDownListFieldSettings Text="Name" Value="EmployeeJobTitleId">

                        </DropDownListFieldSettings>
                    </SfDropDownList>
                </EditTemplate>
            </GridForeignColumn>
            <GridColumn Field="@nameof(EmployeeModel.Gender)">
                <EditTemplate>
                    <SfDropDownList DataSource="genderCollection" TItem="string" TValue="string"
                        @bind-Value="@((context as EmployeeModel).Gender)"> 

                    </SfDropDownList>
                </EditTemplate>
            </GridColumn>
            <GridColumn HeaderText="Date of Birth" Field="@nameof(EmployeeModel.DateOfBirth)" Format="d"></GridColumn>
            @*<GridColumn HeaderText="Reports" Field="@nameof(EmployeeModel.ReportToEmpId)" Width="100px"></GridColumn>*@
            <GridForeignColumn HeaderText="Report To" TValue="ReportToModel" Field="@nameof(EmployeeModel.ReportToEmpId)" ForeignDataSource="reportToModelsData" ForeignKeyValue="ReportToName" Width="130px">
                <EditTemplate>
                    <SfDropDownList @bind-value="@((context as EmployeeModel).ReportToEmpId)" ID="ReportToEmpId" DataSource="reportToModelsData" TItem="ReportToModel" TValue="Nullable<int>">
                        <DropDownListFieldSettings Text="ReportToName" Value="ReportToEmpId">

                        </DropDownListFieldSettings>
                    </SfDropDownList>
                </EditTemplate>
            </GridForeignColumn>
        </GridColumns>
    </SfGrid>
</div>

@code {
    private enum GenderVal
    {
        Male,
        Female,
        Other
    }
    private string[] genderCollection = Enum.GetNames(typeof(GenderVal)); 
    private List<EmployeeModel>? employeeData = null;
    private List<EmployeeJobTitle>? employeeJobTitleData;
    private List<ReportToModel>? reportToModelsData;
    //private List<object> toolBar = new List<object> { "Add", "Edit", "Delete", "Update", "Cancel", "Search" };

    protected override async Task OnInitializedAsync()
    {
        employeeData = await EmployeeManagementService.GetEmployees();
        employeeJobTitleData = await EmployeeManagementService.GetEmployeeJobs();
        reportToModelsData = await EmployeeManagementService.GetReportToEmployees();
    }
}
